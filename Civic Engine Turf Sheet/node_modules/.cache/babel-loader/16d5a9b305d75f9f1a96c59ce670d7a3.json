{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alber\\\\Desktop\\\\App Directory\\\\CivicEngine\\\\civic-engine\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Table from \"./components/Table\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport EditContact from \"./pages/EditContact\";\nimport Footer from \"./components/Footer\";\nimport About from \"./pages/About\";\nimport { ref, set } from \"firebase/database\";\nimport db from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [contacts, setContacts] = useState([]);\n  useEffect(() => {\n    db.child(\"contacts\").on(\"value\", snapshot => {\n      if (snapshot.val() != null) {\n        setContacts({ ...snapshot.val()\n        });\n      }\n    });\n  }, []); // useEffect(() => {\n  //   const getContacts = async () => {\n  //     const fetchedContacts = await fetchContacts();\n  //     setContacts(fetchedContacts);\n  //   };\n  //   getContacts();\n  // }, []);\n  // Fetch Contacts\n\n  const fetchContacts = async () => {\n    const res = await fetch(\"http://localhost:5000/contacts\");\n    const data = await res.json();\n    return data;\n  };\n\n  const header = [\"First Name\", \"Last Name\", \"Email\", \"Phone Number\", \"House/Yard\", \"Suite\", \"Class Year\", \"Home City\", \"Home State\", \"Contact Status\", \"PTE Status\", \"Registration Status\", \"Stage of Voting Process\", \"Where Registered\", \"Actions\"]; // Save Contact\n\n  const saveContact = contact => {\n    set(ref(db, \"contacts/\" + contact.id), contact).then(() => {\n      console.log(\"Success!\");\n    }).catch(err => {\n      console.log(err);\n    });\n  }; // Delete Contact\n\n\n  const deleteContact = id => {\n    setContacts(contacts.filter(contact => contact.id !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        element: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: contacts.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n            header: header,\n            contacts: contacts,\n            onDelete: deleteContact\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"No Contacts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/edit-contact\",\n        element: /*#__PURE__*/_jsxDEV(EditContact, {\n          onSave: saveContact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"0QkyoJrXgoisWwht0c6QpeUnBJE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/alber/Desktop/App Directory/CivicEngine/civic-engine/src/App.js"],"names":["Navbar","Table","BrowserRouter","Router","Routes","Route","useState","useEffect","EditContact","Footer","About","ref","set","db","App","contacts","setContacts","child","on","snapshot","val","fetchContacts","res","fetch","data","json","header","saveContact","contact","id","then","console","log","catch","err","deleteContact","filter","length"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Table from \"./components/Table\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport EditContact from \"./pages/EditContact\";\nimport Footer from \"./components/Footer\";\nimport About from \"./pages/About\";\nimport { ref, set } from \"firebase/database\";\nimport db from \"./firebase\";\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n\n  useEffect(() => {\n    db.child(\"contacts\").on(\"value\", (snapshot) => {\n      if (snapshot.val() != null) {\n        setContacts({\n          ...snapshot.val(),\n        });\n      }\n    });\n  }, []);\n\n  // useEffect(() => {\n  //   const getContacts = async () => {\n  //     const fetchedContacts = await fetchContacts();\n  //     setContacts(fetchedContacts);\n  //   };\n\n  //   getContacts();\n  // }, []);\n\n  // Fetch Contacts\n  const fetchContacts = async () => {\n    const res = await fetch(\"http://localhost:5000/contacts\");\n    const data = await res.json();\n    return data;\n  };\n\n  const header = [\n    \"First Name\",\n    \"Last Name\",\n    \"Email\",\n    \"Phone Number\",\n    \"House/Yard\",\n    \"Suite\",\n    \"Class Year\",\n    \"Home City\",\n    \"Home State\",\n    \"Contact Status\",\n    \"PTE Status\",\n    \"Registration Status\",\n    \"Stage of Voting Process\",\n    \"Where Registered\",\n    \"Actions\",\n  ];\n\n  // Save Contact\n  const saveContact = (contact) => {\n    set(ref(db, \"contacts/\" + contact.id), contact)\n      .then(() => {\n        console.log(\"Success!\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  // Delete Contact\n  const deleteContact = (id) => {\n    setContacts(contacts.filter((contact) => contact.id !== id));\n  };\n\n  return (\n    <Router>\n      <Navbar />\n      <Routes>\n        <Route\n          path=\"/\"\n          exact\n          element={\n            <>\n              {contacts.length > 0 ? (\n                <Table\n                  header={header}\n                  contacts={contacts}\n                  onDelete={deleteContact}\n                />\n              ) : (\n                <h3>No Contacts</h3>\n              )}\n            </>\n          }\n        />\n        <Route\n          path=\"/edit-contact\"\n          element={<EditContact onSave={saveContact} />}\n        />\n        <Route path=\"/about\" element={<About />} />\n      </Routes>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}