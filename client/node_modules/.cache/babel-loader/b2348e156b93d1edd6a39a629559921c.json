{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\alber\\\\Desktop\\\\App Directory\\\\CivicEngine\\\\civic-engine\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Table from \"./components/Table\";\nimport { BrowserRouter as Router, Routes, Route, Navigate } from \"react-router-dom\";\nimport { useState, useEffect, useLayoutEffect } from \"react\";\nimport EditContact from \"./pages/EditContact\";\nimport Footer from \"./components/Footer\";\nimport About from \"./pages/About\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App(_ref) {\n  _s();\n\n  let {\n    navigation\n  } = _ref;\n  const [contacts, setContacts] = useState([]);\n  const [contact, setContact] = useState([]);\n  const [navEditContact, setNavEditContact] = useState(false);\n  useEffect(() => {\n    const unsubscribe = navigation.addListener('focus', () => {\n      console.log(\"hi\");\n    });\n\n    const getContacts = async () => {\n      const fetchedContacts = await fetchContacts();\n      setContacts(fetchedContacts);\n    };\n\n    getContacts();\n    return unsubscribe;\n  }, [navigation]); // Fetch Contacts\n\n  const fetchContacts = async () => {\n    const res = await fetch(\"http://localhost:5000/contacts\");\n    const data = await res.json();\n    return data;\n  };\n\n  const header = [\"First Name\", \"Last Name\", \"Email\", \"Phone Number\", \"House/Yard\", \"Suite\", \"Class Year\", \"Home City\", \"Home State\", \"Contact Status\", \"PTE Status\", \"Registration Status\", \"Stage of Voting Process\", \"Where Registered\", \"Actions\"]; // Edit Contact\n\n  const editContact = contact => {\n    setContact(contact);\n    setNavEditContact(true);\n  }; // Save Contact\n\n\n  const saveContact = contact => {\n    setNavEditContact(false);\n    console.log(contact);\n  }; // Delete Contact\n\n\n  const deleteContact = id => {\n    setContacts(contacts.filter(contact => contact.id !== id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        element: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [navEditContact && /*#__PURE__*/_jsxDEV(Navigate, {\n            to: \"/edit-contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 34\n          }, this), contacts.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n            tableHeader: header,\n            contacts: contacts,\n            onEdit: editContact,\n            onDelete: deleteContact\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"No Contacts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/edit-contact\",\n        onLeave: setNavEditContact(false),\n        element: navEditContact ? /*#__PURE__*/_jsxDEV(EditContact, {\n          contact: contact,\n          onSave: saveContact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"egTOAsM+Wn83as7SlhWvfJ+LD3k=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/alber/Desktop/App Directory/CivicEngine/civic-engine/src/App.js"],"names":["Navbar","Table","BrowserRouter","Router","Routes","Route","Navigate","useState","useEffect","useLayoutEffect","EditContact","Footer","About","App","navigation","contacts","setContacts","contact","setContact","navEditContact","setNavEditContact","unsubscribe","addListener","console","log","getContacts","fetchedContacts","fetchContacts","res","fetch","data","json","header","editContact","saveContact","deleteContact","id","filter","length"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Table from \"./components/Table\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from \"react-router-dom\";\nimport { useState, useEffect, useLayoutEffect } from \"react\";\nimport EditContact from \"./pages/EditContact\";\nimport Footer from \"./components/Footer\";\nimport About from \"./pages/About\";\n\nfunction App({ navigation }) {\n  const [contacts, setContacts] = useState([]);\n  const [contact, setContact] = useState([]);\n  const [navEditContact, setNavEditContact] = useState(false);\n\n  useEffect(() => {\n    const unsubscribe = navigation.addListener('focus', () => {\n      console.log(\"hi\");\n    });\n    \n    const getContacts = async () => {\n      const fetchedContacts = await fetchContacts();\n      setContacts(fetchedContacts);\n    };\n\n    getContacts();\n    return unsubscribe;\n  }, [navigation]);\n\n  // Fetch Contacts\n  const fetchContacts = async () => {\n    const res = await fetch(\"http://localhost:5000/contacts\");\n    const data = await res.json();\n    return data;\n  };\n\n  const header = [\n    \"First Name\",\n    \"Last Name\",\n    \"Email\",\n    \"Phone Number\",\n    \"House/Yard\",\n    \"Suite\",\n    \"Class Year\",\n    \"Home City\",\n    \"Home State\",\n    \"Contact Status\",\n    \"PTE Status\",\n    \"Registration Status\",\n    \"Stage of Voting Process\",\n    \"Where Registered\",\n    \"Actions\",\n  ];\n\n  // Edit Contact\n  const editContact = (contact) => {\n    setContact(contact);\n    setNavEditContact(true);\n  };\n\n  // Save Contact\n  const saveContact = (contact) => {\n    setNavEditContact(false);\n    console.log(contact);\n  };\n\n  // Delete Contact\n  const deleteContact = (id) => {\n    setContacts(contacts.filter((contact) => contact.id !== id));\n  };\n\n  return (\n    <Router>\n      <Navbar />\n      <Routes>\n        <Route\n          path=\"/\"\n          exact\n          element={\n            <>\n              {navEditContact && <Navigate to=\"/edit-contact\" />}\n              {contacts.length > 0 ? (\n                <Table\n                  tableHeader={header}\n                  contacts={contacts}\n                  onEdit={editContact}\n                  onDelete={deleteContact}\n                />\n              ) : (\n                <h3>No Contacts</h3>\n              )}\n            </>\n          }\n        />\n        <Route\n          path=\"/edit-contact\"\n          onLeave={setNavEditContact(false)}\n          element={\n            navEditContact ? (\n              <EditContact contact={contact} onSave={saveContact} />\n            ) : (\n              <Navigate to=\"/\" />\n            )\n          }\n        />\n        <Route path=\"/about\" element={<About />} />\n      </Routes>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}