{"ast":null,"code":"var _jsxFileName = \"/Users/albertqi/Desktop/Directory/CampusContact/Civic Engine Turf Sheet/src/App.js\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Table from \"./components/Table\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport EditContact from \"./pages/EditContact\";\nimport Footer from \"./components/Footer\";\nimport About from \"./pages/About\";\nimport { ref, set, onValue, remove } from \"firebase/database\";\nimport db from \"./firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [contacts, setContacts] = useState([]); // Read Contacts\n\n  useEffect(() => {\n    onValue(ref(db, \"contacts\"), snapshot => {\n      setContacts(snapshot.val() != null ? snapshot.val() : []);\n    });\n  }, []); // Save Contact\n\n  const saveContact = contact => {\n    set(ref(db, \"contacts/\" + contact.id), contact).then(() => {\n      console.log(\"Success!\");\n    }).catch(err => {\n      console.log(err);\n    });\n  }; // Delete Contact\n\n\n  const deleteContact = id => {\n    if (window.confirm(\"Are you sure you want to delete this contact?\")) {\n      remove(ref(db, \"contacts/\" + id)).then(() => {\n        console.log(\"Success!\");\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        element: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: contacts.length > 0 ? /*#__PURE__*/_jsxDEV(Table, {\n            contacts: contacts,\n            onDelete: deleteContact\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"m-3\",\n            children: \"No Contacts\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/edit-contact\",\n        element: /*#__PURE__*/_jsxDEV(EditContact, {\n          onSave: saveContact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 20\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"0QkyoJrXgoisWwht0c6QpeUnBJE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/albertqi/Desktop/Directory/CampusContact/Civic Engine Turf Sheet/src/App.js"],"names":["Navbar","Table","BrowserRouter","Router","Routes","Route","useState","useEffect","EditContact","Footer","About","ref","set","onValue","remove","db","App","contacts","setContacts","snapshot","val","saveContact","contact","id","then","console","log","catch","err","deleteContact","window","confirm","length"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,MAAlC,EAA0CC,KAA1C,QAAuD,kBAAvD;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,OAAnB,EAA4BC,MAA5B,QAA0C,mBAA1C;AACA,OAAOC,EAAP,MAAe,YAAf;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC,CADa,CAGb;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,OAAO,CAACF,GAAG,CAACI,EAAD,EAAK,UAAL,CAAJ,EAAuBI,QAAD,IAAc;AACzCD,MAAAA,WAAW,CAACC,QAAQ,CAACC,GAAT,MAAkB,IAAlB,GAAyBD,QAAQ,CAACC,GAAT,EAAzB,GAA0C,EAA3C,CAAX;AACD,KAFM,CAAP;AAGD,GAJQ,EAIN,EAJM,CAAT,CAJa,CAUb;;AACA,QAAMC,WAAW,GAAIC,OAAD,IAAa;AAC/BV,IAAAA,GAAG,CAACD,GAAG,CAACI,EAAD,EAAK,cAAcO,OAAO,CAACC,EAA3B,CAAJ,EAAoCD,OAApC,CAAH,CACGE,IADH,CACQ,MAAM;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,KAHH,EAIGC,KAJH,CAIUC,GAAD,IAAS;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,KANH;AAOD,GARD,CAXa,CAqBb;;;AACA,QAAMC,aAAa,GAAIN,EAAD,IAAQ;AAC5B,QAAIO,MAAM,CAACC,OAAP,CAAe,+CAAf,CAAJ,EAAqE;AACnEjB,MAAAA,MAAM,CAACH,GAAG,CAACI,EAAD,EAAK,cAAcQ,EAAnB,CAAJ,CAAN,CACGC,IADH,CACQ,MAAM;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACD,OAHH,EAIGC,KAJH,CAIUC,GAAD,IAAS;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,OANH;AAOD;AACF,GAVD;;AAYA,sBACE,QAAC,MAAD;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,GADP;AAEE,QAAA,KAAK,MAFP;AAGE,QAAA,OAAO,eACL;AAAA,oBACGX,QAAQ,CAACe,MAAT,GAAkB,CAAlB,gBACC,QAAC,KAAD;AAAO,YAAA,QAAQ,EAAEf,QAAjB;AAA2B,YAAA,QAAQ,EAAEY;AAArC;AAAA;AAAA;AAAA;AAAA,kBADD,gBAGC;AAAI,YAAA,SAAS,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJJ;AAJJ;AAAA;AAAA;AAAA;AAAA,cADF,eAcE,QAAC,KAAD;AACE,QAAA,IAAI,EAAC,eADP;AAEE,QAAA,OAAO,eAAE,QAAC,WAAD;AAAa,UAAA,MAAM,EAAER;AAArB;AAAA;AAAA;AAAA;AAAA;AAFX;AAAA;AAAA;AAAA;AAAA,cAdF,eAkBE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,OAAO,eAAE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAA9B;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAsBE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GA5DQL,G;;KAAAA,G;AA8DT,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport Table from \"./components/Table\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport EditContact from \"./pages/EditContact\";\nimport Footer from \"./components/Footer\";\nimport About from \"./pages/About\";\nimport { ref, set, onValue, remove } from \"firebase/database\";\nimport db from \"./firebase\";\n\nfunction App() {\n  const [contacts, setContacts] = useState([]);\n\n  // Read Contacts\n  useEffect(() => {\n    onValue(ref(db, \"contacts\"), (snapshot) => {\n      setContacts(snapshot.val() != null ? snapshot.val() : []);\n    });\n  }, []);\n\n  // Save Contact\n  const saveContact = (contact) => {\n    set(ref(db, \"contacts/\" + contact.id), contact)\n      .then(() => {\n        console.log(\"Success!\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  // Delete Contact\n  const deleteContact = (id) => {\n    if (window.confirm(\"Are you sure you want to delete this contact?\")) {\n      remove(ref(db, \"contacts/\" + id))\n        .then(() => {\n          console.log(\"Success!\");\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  return (\n    <Router>\n      <Navbar />\n      <Routes>\n        <Route\n          path=\"/\"\n          exact\n          element={\n            <>\n              {contacts.length > 0 ? (\n                <Table contacts={contacts} onDelete={deleteContact} />\n              ) : (\n                <h4 className=\"m-3\">No Contacts</h4>\n              )}\n            </>\n          }\n        />\n        <Route\n          path=\"/edit-contact\"\n          element={<EditContact onSave={saveContact} />}\n        />\n        <Route path=\"/about\" element={<About />} />\n      </Routes>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}