{"ast":null,"code":"var _jsxFileName = \"/Users/pmallick/Desktop/CS50/CivicEngine-main/src/contexts/AuthContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { auth } from '../utils/init-firebase';\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, sendPasswordResetEmail, onAuthStateChanged, signInWithPopup, GoogleAuthProvider, signOut, confirmPasswordReset } from 'firebase/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({\n  currentUser: null,\n  signInWithGoogle: () => Promise,\n  login: () => Promise,\n  register: () => Promise,\n  logout: () => Promise,\n  forgotPassword: () => Promise,\n  resetPassword: () => Promise\n});\nexport const useAuth = () => {\n  _s();\n\n  return useContext(AuthContext);\n};\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport default function AuthContextProvider(_ref) {\n  _s2();\n\n  let {\n    children\n  } = _ref;\n  const [currentUser, setCurrentUser] = useState(null);\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      setCurrentUser(user ? user : null);\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n  useEffect(() => {\n    console.log('The user is', currentUser);\n  }, [currentUser]);\n\n  function login(email, password) {\n    return signInWithEmailAndPassword(auth, email, password);\n  }\n\n  function register(email, password) {\n    return createUserWithEmailAndPassword(auth, email, password);\n  }\n\n  function forgotPassword(email) {\n    return sendPasswordResetEmail(auth, email, {\n      url: `http://localhost:3000/login`\n    });\n  }\n\n  function resetPassword(oobCode, newPassword) {\n    return confirmPasswordReset(auth, oobCode, newPassword);\n  }\n\n  function logout() {\n    return signOut(auth);\n  }\n\n  function signInWithGoogle() {\n    const provider = new GoogleAuthProvider();\n    return signInWithPopup(auth, provider);\n  }\n\n  const value = {\n    currentUser,\n    signInWithGoogle,\n    login,\n    register,\n    logout,\n    forgotPassword,\n    resetPassword\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 10\n  }, this);\n}\n\n_s2(AuthContextProvider, \"OV9yLRz34hG/VYz7P4+j1dZgWH0=\");\n\n_c = AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["/Users/pmallick/Desktop/CS50/CivicEngine-main/src/contexts/AuthContext.js"],"names":["React","createContext","useContext","useEffect","useState","auth","createUserWithEmailAndPassword","signInWithEmailAndPassword","sendPasswordResetEmail","onAuthStateChanged","signInWithPopup","GoogleAuthProvider","signOut","confirmPasswordReset","AuthContext","currentUser","signInWithGoogle","Promise","login","register","logout","forgotPassword","resetPassword","useAuth","AuthContextProvider","children","setCurrentUser","unsubscribe","user","console","log","email","password","url","oobCode","newPassword","provider","value"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAsE,OAAtE;AACA,SAASC,IAAT,QAAqB,wBAArB;AACA,SACEC,8BADF,EAEEC,0BAFF,EAGEC,sBAHF,EAIEC,kBAJF,EAKEC,eALF,EAMEC,kBANF,EAOEC,OAPF,EAQEC,oBARF,QASO,eATP;;AAWA,MAAMC,WAAW,gBAAGb,aAAa,CAAC;AAChCc,EAAAA,WAAW,EAAE,IADmB;AAEhCC,EAAAA,gBAAgB,EAAE,MAAMC,OAFQ;AAGhCC,EAAAA,KAAK,EAAE,MAAMD,OAHmB;AAIhCE,EAAAA,QAAQ,EAAE,MAAMF,OAJgB;AAKhCG,EAAAA,MAAM,EAAE,MAAMH,OALkB;AAMhCI,EAAAA,cAAc,EAAE,MAAMJ,OANU;AAOhCK,EAAAA,aAAa,EAAE,MAAML;AAPW,CAAD,CAAjC;AAUA,OAAO,MAAMM,OAAO,GAAG;AAAA;;AAAA,SAAMrB,UAAU,CAACY,WAAD,CAAhB;AAAA,CAAhB;;GAAMS,O;;AAEb,eAAe,SAASC,mBAAT,OAA2C;AAAA;;AAAA,MAAd;AAAEC,IAAAA;AAAF,GAAc;AACxD,QAAM,CAACV,WAAD,EAAcW,cAAd,IAAgCtB,QAAQ,CAAC,IAAD,CAA9C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMwB,WAAW,GAAGlB,kBAAkB,CAACJ,IAAD,EAAOuB,IAAI,IAAI;AACnDF,MAAAA,cAAc,CAACE,IAAI,GAAGA,IAAH,GAAU,IAAf,CAAd;AACD,KAFqC,CAAtC;AAGA,WAAO,MAAM;AACXD,MAAAA,WAAW;AACZ,KAFD;AAGD,GAPQ,EAON,EAPM,CAAT;AASAxB,EAAAA,SAAS,CAAC,MAAM;AACd0B,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2Bf,WAA3B;AACD,GAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;;AAIA,WAASG,KAAT,CAAea,KAAf,EAAsBC,QAAtB,EAAgC;AAC9B,WAAOzB,0BAA0B,CAACF,IAAD,EAAO0B,KAAP,EAAcC,QAAd,CAAjC;AACD;;AAED,WAASb,QAAT,CAAkBY,KAAlB,EAAyBC,QAAzB,EAAmC;AACjC,WAAO1B,8BAA8B,CAACD,IAAD,EAAO0B,KAAP,EAAcC,QAAd,CAArC;AACD;;AAED,WAASX,cAAT,CAAwBU,KAAxB,EAA+B;AAC7B,WAAOvB,sBAAsB,CAACH,IAAD,EAAO0B,KAAP,EAAc;AACzCE,MAAAA,GAAG,EAAG;AADmC,KAAd,CAA7B;AAGD;;AAED,WAASX,aAAT,CAAuBY,OAAvB,EAAgCC,WAAhC,EAA6C;AAC3C,WAAOtB,oBAAoB,CAACR,IAAD,EAAO6B,OAAP,EAAgBC,WAAhB,CAA3B;AACD;;AAED,WAASf,MAAT,GAAkB;AAChB,WAAOR,OAAO,CAACP,IAAD,CAAd;AACD;;AAED,WAASW,gBAAT,GAA4B;AAC1B,UAAMoB,QAAQ,GAAG,IAAIzB,kBAAJ,EAAjB;AACA,WAAOD,eAAe,CAACL,IAAD,EAAO+B,QAAP,CAAtB;AACD;;AAED,QAAMC,KAAK,GAAG;AACZtB,IAAAA,WADY;AAEZC,IAAAA,gBAFY;AAGZE,IAAAA,KAHY;AAIZC,IAAAA,QAJY;AAKZC,IAAAA,MALY;AAMZC,IAAAA,cANY;AAOZC,IAAAA;AAPY,GAAd;AASA,sBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEe,KAA7B;AAAA,cAAqCZ;AAArC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;IArDuBD,mB;;KAAAA,mB","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react'\nimport { auth } from '../utils/init-firebase'\nimport {\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  sendPasswordResetEmail,\n  onAuthStateChanged,\n  signInWithPopup,\n  GoogleAuthProvider,\n  signOut,\n  confirmPasswordReset,\n} from 'firebase/auth'\n\nconst AuthContext = createContext({\n  currentUser: null,\n  signInWithGoogle: () => Promise,\n  login: () => Promise,\n  register: () => Promise,\n  logout: () => Promise,\n  forgotPassword: () => Promise,\n  resetPassword: () => Promise,\n})\n\nexport const useAuth = () => useContext(AuthContext)\n\nexport default function AuthContextProvider({ children }) {\n  const [currentUser, setCurrentUser] = useState(null)\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, user => {\n      setCurrentUser(user ? user : null)\n    })\n    return () => {\n      unsubscribe()\n    }\n  }, [])\n\n  useEffect(() => {\n    console.log('The user is', currentUser)\n  }, [currentUser])\n\n  function login(email, password) {\n    return signInWithEmailAndPassword(auth, email, password)\n  }\n\n  function register(email, password) {\n    return createUserWithEmailAndPassword(auth, email, password)\n  }\n\n  function forgotPassword(email) {\n    return sendPasswordResetEmail(auth, email, {\n      url: `http://localhost:3000/login`,\n    })\n  }\n\n  function resetPassword(oobCode, newPassword) {\n    return confirmPasswordReset(auth, oobCode, newPassword)\n  }\n\n  function logout() {\n    return signOut(auth)\n  }\n\n  function signInWithGoogle() {\n    const provider = new GoogleAuthProvider()\n    return signInWithPopup(auth, provider)\n  }\n\n  const value = {\n    currentUser,\n    signInWithGoogle,\n    login,\n    register,\n    logout,\n    forgotPassword,\n    resetPassword,\n  }\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\n}\n"]},"metadata":{},"sourceType":"module"}