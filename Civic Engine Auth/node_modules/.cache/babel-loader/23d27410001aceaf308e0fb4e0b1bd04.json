{"ast":null,"code":"var _jsxFileName = \"/Users/pmallick/Desktop/CS50/CivicEngine-main/src/components/AppRouter.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { BrowserRouter as Router, Navigate, Route, Routes, useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport ForgotPasswordPage from '../pages/ForgotPasswordPage';\nimport Homepage from '../pages/Homepage';\nimport Loginpage from '../pages/Loginpage';\nimport NotfoundPage from '../pages/NotfoundPage';\nimport Profilepage from '../pages/Profilepage';\nimport Registerpage from '../pages/Registerpage';\nimport ResetPasswordPage from '../pages/ResetPasswordPage';\nimport TestPage from '../pages/TestPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AppRouter(props) {\n  _s();\n\n  const [contacts, setContacts] = useState([]); // // Read Contacts\n  // useEffect(() => {\n  //   onValue(ref(db, \"contacts\"), (snapshot) => {\n  //     setContacts(snapshot.val() != null ? snapshot.val() : []);\n  //   });\n  // }, []);\n  // // Save Contact\n  // const saveContact = (contact) => {\n  //   set(ref(db, \"contacts/\" + contact.id), contact)\n  //     .then(() => {\n  //       console.log(\"Success!\");\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // };\n  // // Delete Contact\n  // const deleteContact = (id) => {\n  //   if (window.confirm(\"Are you sure you want to delete this contact?\")) {\n  //     remove(ref(db, \"contacts/\" + id))\n  //       .then(() => {\n  //         console.log(\"Success!\");\n  //       })\n  //       .catch((err) => {\n  //         console.log(err);\n  //       });\n  //   }\n  // }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Homepage, {\n            contacts: contacts,\n            onDelete: onDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(AppRouter, \"Wk/5gz66h597tqB1iDdgoAzWnmc=\");\n\n_c = AppRouter;\n\nfunction ProtectedRoute(props) {\n  _s2();\n\n  const {\n    currentUser\n  } = useAuth();\n  const {\n    path\n  } = props;\n  console.log('path', path);\n  const location = useLocation();\n  console.log('location state', location.state);\n\n  if (path === '/login' || path === '/register' || path === '/forgot-password' || path === '/reset-password') {\n    var _location$state$from, _location$state;\n\n    return currentUser ? /*#__PURE__*/_jsxDEV(Navigate, {\n      to: (_location$state$from = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.from) !== null && _location$state$from !== void 0 ? _location$state$from : '/profile'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Route, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this);\n  }\n\n  return currentUser ? /*#__PURE__*/_jsxDEV(Route, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: {\n      pathname: '/login',\n      state: {\n        from: path\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(ProtectedRoute, \"rIt27QaThFDSIK05EdjgvIu2jqs=\", false, function () {\n  return [useAuth, useLocation];\n});\n\n_c2 = ProtectedRoute;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppRouter\");\n$RefreshReg$(_c2, \"ProtectedRoute\");","map":{"version":3,"sources":["/Users/pmallick/Desktop/CS50/CivicEngine-main/src/components/AppRouter.jsx"],"names":["React","BrowserRouter","Router","Navigate","Route","Routes","useLocation","useAuth","ForgotPasswordPage","Homepage","Loginpage","NotfoundPage","Profilepage","Registerpage","ResetPasswordPage","TestPage","AppRouter","props","contacts","setContacts","useState","onDelete","ProtectedRoute","currentUser","path","console","log","location","state","from","pathname"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,QAFF,EAGEC,KAHF,EAIEC,MAJF,EAKEC,WALF,QAMO,kBANP;AAOA,SAASC,OAAT,QAAwB,yBAAxB;AACA,OAAOC,kBAAP,MAA+B,6BAA/B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,SAAP,MAAsB,oBAAtB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,iBAAP,MAA8B,4BAA9B;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACvC,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,CAAC,EAAD,CAAxC,CADuC,CAGvC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACE;AAAA,2BAsBE,QAAC,MAAD;AAAA,6BACE,QAAC,MAAD;AAAA,+BACE,QAAC,KAAD;AAAO,UAAA,KAAK,MAAZ;AAAa,UAAA,IAAI,EAAC,GAAlB;AAAsB,UAAA,OAAO,eAAE,QAAC,QAAD;AAAU,YAAA,QAAQ,EAAEF,QAApB;AAA8B,YAAA,QAAQ,EAAEG;AAAxC;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAtBF,mBADF;AAiDD;;GAnFuBL,S;;KAAAA,S;;AAqFxB,SAASM,cAAT,CAAwBL,KAAxB,EAA+B;AAAA;;AAC7B,QAAM;AAAEM,IAAAA;AAAF,MAAkBhB,OAAO,EAA/B;AACA,QAAM;AAAEiB,IAAAA;AAAF,MAAWP,KAAjB;AACAQ,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBF,IAApB;AACA,QAAMG,QAAQ,GAAGrB,WAAW,EAA5B;AACAmB,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BC,QAAQ,CAACC,KAAvC;;AAEA,MACEJ,IAAI,KAAK,QAAT,IACAA,IAAI,KAAK,WADT,IAEAA,IAAI,KAAK,kBAFT,IAGAA,IAAI,KAAK,iBAJX,EAKE;AAAA;;AACA,WAAOD,WAAW,gBAChB,QAAC,QAAD;AAAU,MAAA,EAAE,6CAAEI,QAAQ,CAACC,KAAX,oDAAE,gBAAgBC,IAAlB,uEAA0B;AAAtC;AAAA;AAAA;AAAA;AAAA,YADgB,gBAGd,QAAC,KAAD,OAAWZ;AAAX;AAAA;AAAA;AAAA;AAAA,YAHJ;AAKD;;AACD,SAAOM,WAAW,gBAChB,QAAC,KAAD,OAAWN;AAAX;AAAA;AAAA;AAAA;AAAA,UADgB,gBAGd,QAAC,QAAD;AACE,IAAA,EAAE,EAAE;AACFa,MAAAA,QAAQ,EAAE,QADR;AAEFF,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAEL;AAAR;AAFL;AADN;AAAA;AAAA;AAAA;AAAA,UAHJ;AAUD;;IA7BQF,c;UACiBf,O,EAGPD,W;;;MAJVgB,c","sourcesContent":["import React from 'react'\nimport {\n  BrowserRouter as Router,\n  Navigate,\n  Route,\n  Routes,\n  useLocation,\n} from 'react-router-dom'\nimport { useAuth } from '../contexts/AuthContext'\nimport ForgotPasswordPage from '../pages/ForgotPasswordPage'\nimport Homepage from '../pages/Homepage'\nimport Loginpage from '../pages/Loginpage'\nimport NotfoundPage from '../pages/NotfoundPage'\nimport Profilepage from '../pages/Profilepage'\nimport Registerpage from '../pages/Registerpage'\nimport ResetPasswordPage from '../pages/ResetPasswordPage'\nimport TestPage from '../pages/TestPage'\n\nexport default function AppRouter(props) {\n  const [contacts, setContacts] = useState([]);\n\n  // // Read Contacts\n  // useEffect(() => {\n  //   onValue(ref(db, \"contacts\"), (snapshot) => {\n  //     setContacts(snapshot.val() != null ? snapshot.val() : []);\n  //   });\n  // }, []);\n\n  // // Save Contact\n  // const saveContact = (contact) => {\n  //   set(ref(db, \"contacts/\" + contact.id), contact)\n  //     .then(() => {\n  //       console.log(\"Success!\");\n  //     })\n  //     .catch((err) => {\n  //       console.log(err);\n  //     });\n  // };\n\n  // // Delete Contact\n  // const deleteContact = (id) => {\n  //   if (window.confirm(\"Are you sure you want to delete this contact?\")) {\n  //     remove(ref(db, \"contacts/\" + id))\n  //       .then(() => {\n  //         console.log(\"Success!\");\n  //       })\n  //       .catch((err) => {\n  //         console.log(err);\n  //       });\n  //   }\n  // }\n\n  return (\n    <>\n      {/* <Router>\n        <Routes>\n          <Route exact path='/' element={Homepage} />\n          <ProtectedRoute exact path='/login' element={Loginpage} />\n          <ProtectedRoute exact path='/register' element={Registerpage} />\n          <ProtectedRoute exact path='/profile' element={Profilepage} />\n          <ProtectedRoute exact path='/test' element={TestPage} />\n          <ProtectedRoute\n            exact\n            path='/forgot-password'\n            element={ForgotPasswordPage}\n          />\n          <ProtectedRoute\n            exact\n            path='/reset-password'\n            element={ResetPasswordPage}\n          />\n          <Route exact path='*' element={NotfoundPage} />\n        </Routes>\n      </Router> */}\n\n      <Router>\n        <Routes>\n          <Route exact path='/' element={<Homepage contacts={contacts} onDelete={onDelete} />} />\n          {/* <Route exact path='/login' element={<ProtectedRoute />}>\n            <Route exact path='/login' element={<Loginpage />} />\n          </Route>\n          <Route exact path='/register' element={<ProtectedRoute />}>\n            <Route exact path='/register' element={<Registerpage />} />\n          </Route>\n          <Route exact path='/profile' element={<ProtectedRoute />}>\n            <Route exact path='/profile' element={<Profilepage />} />\n          </Route>\n          <Route exact path='/test' element={<ProtectedRoute />}>\n            <Route exact path='/test' element={<TestPage />} />\n          </Route>\n          <Route exact path='/forgot-password' element={<ProtectedRoute />}>\n            <Route exact path='/forgot-password' element={<ForgotPasswordPage />} />\n          </Route>\n          <Route exact path='/reset-password' element={<ProtectedRoute />}>\n            <Route exact path='/reset-password' element={<ResetPasswordPage />} />\n          </Route>\n          <Route exact path='*' element={<NotfoundPage />} /> */}\n        </Routes>\n      </Router>\n    </>\n  )\n}\n\nfunction ProtectedRoute(props) {\n  const { currentUser } = useAuth()\n  const { path } = props\n  console.log('path', path)\n  const location = useLocation()\n  console.log('location state', location.state)\n\n  if (\n    path === '/login' ||\n    path === '/register' ||\n    path === '/forgot-password' ||\n    path === '/reset-password'\n  ) {\n    return currentUser ? (\n      <Navigate to={location.state?.from ?? '/profile'} />\n    ) : (\n        <Route {...props} />\n      )\n  }\n  return currentUser ? (\n    <Route {...props} />\n  ) : (\n      <Navigate\n        to={{\n          pathname: '/login',\n          state: { from: path },\n        }}\n      />\n    )\n}\n"]},"metadata":{},"sourceType":"module"}