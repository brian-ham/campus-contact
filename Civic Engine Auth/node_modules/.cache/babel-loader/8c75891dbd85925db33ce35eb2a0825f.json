{"ast":null,"code":"var _jsxFileName = \"/Users/pmallick/Desktop/CS50/CivicEngine-main/src/pages/ForgotPasswordPage.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Center, chakra, FormControl, FormLabel, Heading, Input, Stack, useToast } from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport { Card } from '../components/Card';\nimport DividerWithText from '../components/DividerWithText';\nimport { Layout } from '../components/Layout';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ForgotPasswordPage() {\n  _s();\n\n  const navigate = useNavigate();\n  const {\n    forgotPassword\n  } = useAuth();\n  const toast = useToast();\n  const [email, setEmail] = useState('');\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      textAlign: \"center\",\n      my: 12,\n      children: \"Forgot password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      maxW: \"md\",\n      mx: \"auto\",\n      mt: 4,\n      children: [/*#__PURE__*/_jsxDEV(chakra.form, {\n        onSubmit: async e => {\n          e.preventDefault(); // your login logic here\n\n          try {\n            await forgotPassword(email);\n            toast({\n              description: `An email is sent to ${email} for password reset instructions.`,\n              status: 'success',\n              duration: 9000,\n              isClosable: true\n            });\n          } catch (error) {\n            console.log(error.message);\n            toast({\n              description: error.message,\n              status: 'error',\n              duration: 9000,\n              isClosable: true\n            });\n          }\n        },\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"email\",\n              type: \"email\",\n              autoComplete: \"email\",\n              required: true,\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            colorScheme: \"red\",\n            size: \"lg\",\n            fontSize: \"md\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DividerWithText, {\n        my: 6,\n        children: \"OR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Center, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"link\",\n          onClick: () => {\n            navigate(\"/login\");\n          },\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ForgotPasswordPage, \"7Il/0xUVzqalOuPzqwbHjttVuwc=\", false, function () {\n  return [useNavigate, useAuth, useToast];\n});\n\n_c = ForgotPasswordPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPasswordPage\");","map":{"version":3,"sources":["/Users/pmallick/Desktop/CS50/CivicEngine-main/src/pages/ForgotPasswordPage.jsx"],"names":["Button","Center","chakra","FormControl","FormLabel","Heading","Input","Stack","useToast","React","useState","useNavigate","Card","DividerWithText","Layout","useAuth","ForgotPasswordPage","navigate","forgotPassword","toast","email","setEmail","e","preventDefault","description","status","duration","isClosable","error","console","log","message","target","value"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Center,\n  chakra,\n  FormControl,\n  FormLabel,\n  Heading,\n  Input,\n  Stack,\n  useToast,\n} from '@chakra-ui/react'\nimport React, { useState } from 'react'\nimport { useNavigate } from 'react-router'\nimport { Card } from '../components/Card'\nimport DividerWithText from '../components/DividerWithText'\nimport { Layout } from '../components/Layout'\nimport { useAuth } from '../contexts/AuthContext'\n\nexport default function ForgotPasswordPage() {\n  const navigate = useNavigate()\n  const { forgotPassword } = useAuth()\n  const toast = useToast()\n\n  const [email, setEmail] = useState('')\n\n  return (\n    <Layout>\n      <Heading textAlign='center' my={12}>\n        Forgot password\n      </Heading>\n      <Card maxW='md' mx='auto' mt={4}>\n        <chakra.form\n          onSubmit={async e => {\n            e.preventDefault()\n            // your login logic here\n            try {\n              await forgotPassword(email)\n              toast({\n                description: `An email is sent to ${email} for password reset instructions.`,\n                status: 'success',\n                duration: 9000,\n                isClosable: true,\n              })\n            } catch (error) {\n              console.log(error.message)\n              toast({\n                description: error.message,\n                status: 'error',\n                duration: 9000,\n                isClosable: true,\n              })\n            }\n          }}\n        >\n          <Stack spacing='6'>\n            <FormControl id='email'>\n              <FormLabel>Email address</FormLabel>\n              <Input\n                name='email'\n                type='email'\n                autoComplete='email'\n                required\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n              />\n            </FormControl>\n            <Button type='submit' colorScheme='red' size='lg' fontSize='md'>\n              Submit\n            </Button>\n          </Stack>\n        </chakra.form>\n        <DividerWithText my={6}>OR</DividerWithText>\n        <Center>\n          <Button variant='link' onClick={() => {\n            navigate(\"/login\");\n          }}>\n            Login\n          </Button>\n        </Center>\n      </Card>\n    </Layout>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}