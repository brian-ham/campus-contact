{"ast":null,"code":"var _jsxFileName = \"/Users/pmallick/Desktop/CS50/civicengine/src/pages/Registerpage.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Center, chakra, FormControl, FormLabel, Heading, Input, Stack, useToast } from '@chakra-ui/react';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { FaGoogle } from 'react-icons/fa';\nimport { useHistory } from 'react-router-dom';\nimport { Card } from '../components/Card';\nimport DividerWithText from '../components/DividerWithText';\nimport { Layout } from '../components/Layout';\nimport { useAuth } from '../contexts/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Registerpage() {\n  _s();\n\n  const history = useHistory();\n  const {\n    signInWithGoogle,\n    register\n  } = useAuth();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const toast = useToast();\n  const mounted = useRef(false);\n  useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      textAlign: \"center\",\n      my: 12,\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      maxW: \"md\",\n      mx: \"auto\",\n      mt: 4,\n      children: [/*#__PURE__*/_jsxDEV(chakra.form, {\n        onSubmit: async e => {\n          e.preventDefault();\n\n          if (!email || !password) {\n            toast({\n              description: 'Credentials not valid.',\n              status: 'error',\n              duration: 9000,\n              isClosable: true\n            });\n            return;\n          } // your register logic here\n\n\n          setIsSubmitting(true);\n          register(email, password).then(res => {}).catch(error => {\n            console.log(error.message);\n            toast({\n              description: error.message,\n              status: 'error',\n              duration: 9000,\n              isClosable: true\n            });\n          }).finally(() => {\n            mounted.current && setIsSubmitting(false);\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"email\",\n              type: \"email\",\n              autoComplete: \"email\",\n              required: true,\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"password\",\n              type: \"password\",\n              autoComplete: \"password\",\n              required: true,\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            colorScheme: \"pink\",\n            size: \"lg\",\n            fontSize: \"md\",\n            isLoading: isSubmitting,\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Center, {\n        my: 4,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"link\",\n          onClick: () => history.push('/login'),\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DividerWithText, {\n        my: 6,\n        children: \"OR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline\",\n        isFullWidth: true,\n        colorScheme: \"red\",\n        leftIcon: /*#__PURE__*/_jsxDEV(FaGoogle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this),\n        onClick: () => signInWithGoogle().then(user => console.log(user)).catch(e => console.log(e.message)),\n        children: \"Sign in with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Registerpage, \"V8KshdqSZN2Y71nSiLV3N7S5QkM=\", false, function () {\n  return [useHistory, useAuth, useToast];\n});\n\n_c = Registerpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registerpage\");","map":{"version":3,"sources":["/Users/pmallick/Desktop/CS50/civicengine/src/pages/Registerpage.jsx"],"names":["Button","Center","chakra","FormControl","FormLabel","Heading","Input","Stack","useToast","React","useEffect","useRef","useState","FaGoogle","useHistory","Card","DividerWithText","Layout","useAuth","Registerpage","history","signInWithGoogle","register","email","setEmail","password","setPassword","isSubmitting","setIsSubmitting","toast","mounted","current","e","preventDefault","description","status","duration","isClosable","then","res","catch","error","console","log","message","finally","target","value","push","user"],"mappings":"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","sourcesContent":["import {\n  Button,\n  Center,\n  chakra,\n  FormControl,\n  FormLabel,\n  Heading,\n  Input,\n  Stack,\n  useToast,\n} from '@chakra-ui/react'\nimport React, { useEffect, useRef, useState } from 'react'\nimport { FaGoogle } from 'react-icons/fa'\nimport { useHistory } from 'react-router-dom'\nimport { Card } from '../components/Card'\nimport DividerWithText from '../components/DividerWithText'\nimport { Layout } from '../components/Layout'\nimport { useAuth } from '../contexts/AuthContext'\n\nexport default function Registerpage() {\n  const history = useHistory()\n  const { signInWithGoogle, register } = useAuth()\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const toast = useToast()\n  const mounted = useRef(false)\n\n  useEffect(() => {\n    mounted.current = true\n    return () => {\n      mounted.current = false\n    }\n  }, [])\n\n  return (\n    <Layout>\n      <Heading textAlign='center' my={12}>\n        Register\n      </Heading>\n      <Card maxW='md' mx='auto' mt={4}>\n        <chakra.form\n          onSubmit={async e => {\n            e.preventDefault()\n            if (!email || !password) {\n              toast({\n                description: 'Credentials not valid.',\n                status: 'error',\n                duration: 9000,\n                isClosable: true,\n              })\n              return\n            }\n            // your register logic here\n            setIsSubmitting(true)\n            register(email, password)\n              .then(res => {})\n              .catch(error => {\n                console.log(error.message)\n                toast({\n                  description: error.message,\n                  status: 'error',\n                  duration: 9000,\n                  isClosable: true,\n                })\n              })\n              .finally(() => {\n                mounted.current && setIsSubmitting(false)\n              })\n          }}\n        >\n          <Stack spacing='6'>\n            <FormControl id='email'>\n              <FormLabel>Email address</FormLabel>\n              <Input\n                name='email'\n                type='email'\n                autoComplete='email'\n                required\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n              />\n            </FormControl>\n            <FormControl id='password'>\n              <FormLabel>Password</FormLabel>\n              <Input\n                name='password'\n                type='password'\n                autoComplete='password'\n                required\n                value={password}\n                onChange={e => setPassword(e.target.value)}\n              />\n            </FormControl>\n            <Button\n              type='submit'\n              colorScheme='pink'\n              size='lg'\n              fontSize='md'\n              isLoading={isSubmitting}\n            >\n              Sign up\n            </Button>\n          </Stack>\n        </chakra.form>\n        <Center my={4}>\n          <Button variant='link' onClick={() => history.push('/login')}>\n            Login\n          </Button>\n        </Center>\n        <DividerWithText my={6}>OR</DividerWithText>\n        <Button\n          variant='outline'\n          isFullWidth\n          colorScheme='red'\n          leftIcon={<FaGoogle />}\n          onClick={() =>\n            signInWithGoogle()\n              .then(user => console.log(user))\n              .catch(e => console.log(e.message))\n          }\n        >\n          Sign in with Google\n        </Button>\n      </Card>\n    </Layout>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}