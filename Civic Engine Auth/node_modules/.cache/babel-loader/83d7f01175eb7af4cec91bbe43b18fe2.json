{"ast":null,"code":"var _jsxFileName = \"/Users/pmallick/Desktop/CS50/CivicEngine-main/src/components/AppRouter.jsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Navigate, Route, Routes, useLocation } from 'react-router-dom';\nimport { useAuth } from '../contexts/AuthContext';\nimport ForgotPasswordPage from '../pages/ForgotPasswordPage';\nimport Homepage from '../pages/Homepage';\nimport Loginpage from '../pages/Loginpage';\nimport NotfoundPage from '../pages/NotfoundPage';\nimport Profilepage from '../pages/Profilepage';\nimport Registerpage from '../pages/Registerpage';\nimport ResetPasswordPage from '../pages/ResetPasswordPage';\nimport TestPage from '../pages/TestPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AppRouter(props) {\n  _s();\n\n  const [contacts, setContacts] = useState([]); // Read Contacts\n\n  useEffect(() => {\n    onValue(ref(db, \"contacts\"), snapshot => {\n      setContacts(snapshot.val() != null ? snapshot.val() : []);\n    });\n  }, []); // Save Contact\n\n  const saveContact = contact => {\n    set(ref(db, \"contacts/\" + contact.id), contact).then(() => {\n      console.log(\"Success!\");\n    }).catch(err => {\n      console.log(err);\n    });\n  }; // Delete Contact\n\n\n  const deleteContact = id => {\n    if (window.confirm(\"Are you sure you want to delete this contact?\")) {\n      remove(ref(db, \"contacts/\" + id)).then(() => {\n        console.log(\"Success!\");\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(Homepage, {\n            contacts: contacts,\n            onDelete: onDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(AppRouter, \"0QkyoJrXgoisWwht0c6QpeUnBJE=\");\n\n_c = AppRouter;\n\nfunction ProtectedRoute(props) {\n  _s2();\n\n  const {\n    currentUser\n  } = useAuth();\n  const {\n    path\n  } = props;\n  console.log('path', path);\n  const location = useLocation();\n  console.log('location state', location.state);\n\n  if (path === '/login' || path === '/register' || path === '/forgot-password' || path === '/reset-password') {\n    var _location$state$from, _location$state;\n\n    return currentUser ? /*#__PURE__*/_jsxDEV(Navigate, {\n      to: (_location$state$from = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.from) !== null && _location$state$from !== void 0 ? _location$state$from : '/profile'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(Route, { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }, this);\n  }\n\n  return currentUser ? /*#__PURE__*/_jsxDEV(Route, { ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: {\n      pathname: '/login',\n      state: {\n        from: path\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 7\n  }, this);\n}\n\n_s2(ProtectedRoute, \"rIt27QaThFDSIK05EdjgvIu2jqs=\", false, function () {\n  return [useAuth, useLocation];\n});\n\n_c2 = ProtectedRoute;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"AppRouter\");\n$RefreshReg$(_c2, \"ProtectedRoute\");","map":{"version":3,"sources":["/Users/pmallick/Desktop/CS50/CivicEngine-main/src/components/AppRouter.jsx"],"names":["React","useState","useEffect","BrowserRouter","Router","Navigate","Route","Routes","useLocation","useAuth","ForgotPasswordPage","Homepage","Loginpage","NotfoundPage","Profilepage","Registerpage","ResetPasswordPage","TestPage","AppRouter","props","contacts","setContacts","onValue","ref","db","snapshot","val","saveContact","contact","set","id","then","console","log","catch","err","deleteContact","window","confirm","remove","onDelete","ProtectedRoute","currentUser","path","location","state","from","pathname"],"mappings":"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","sourcesContent":["import { React, useState, useEffect} from 'react'\nimport {\n  BrowserRouter as Router,\n  Navigate,\n  Route,\n  Routes,\n  useLocation,\n} from 'react-router-dom'\nimport { useAuth } from '../contexts/AuthContext'\nimport ForgotPasswordPage from '../pages/ForgotPasswordPage'\nimport Homepage from '../pages/Homepage'\nimport Loginpage from '../pages/Loginpage'\nimport NotfoundPage from '../pages/NotfoundPage'\nimport Profilepage from '../pages/Profilepage'\nimport Registerpage from '../pages/Registerpage'\nimport ResetPasswordPage from '../pages/ResetPasswordPage'\nimport TestPage from '../pages/TestPage'\n\nexport default function AppRouter(props) {\n  const [contacts, setContacts] = useState([]);\n\n  // Read Contacts\n  useEffect(() => {\n    onValue(ref(db, \"contacts\"), (snapshot) => {\n      setContacts(snapshot.val() != null ? snapshot.val() : []);\n    });\n  }, []);\n\n  // Save Contact\n  const saveContact = (contact) => {\n    set(ref(db, \"contacts/\" + contact.id), contact)\n      .then(() => {\n        console.log(\"Success!\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  // Delete Contact\n  const deleteContact = (id) => {\n    if (window.confirm(\"Are you sure you want to delete this contact?\")) {\n      remove(ref(db, \"contacts/\" + id))\n        .then(() => {\n          console.log(\"Success!\");\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  return (\n    <>\n      {/* <Router>\n        <Routes>\n          <Route exact path='/' element={Homepage} />\n          <ProtectedRoute exact path='/login' element={Loginpage} />\n          <ProtectedRoute exact path='/register' element={Registerpage} />\n          <ProtectedRoute exact path='/profile' element={Profilepage} />\n          <ProtectedRoute exact path='/test' element={TestPage} />\n          <ProtectedRoute\n            exact\n            path='/forgot-password'\n            element={ForgotPasswordPage}\n          />\n          <ProtectedRoute\n            exact\n            path='/reset-password'\n            element={ResetPasswordPage}\n          />\n          <Route exact path='*' element={NotfoundPage} />\n        </Routes>\n      </Router> */}\n\n      <Router>\n        <Routes>\n          <Route exact path='/' element={<Homepage contacts={contacts} onDelete={onDelete} />} />\n          {/* <Route exact path='/login' element={<ProtectedRoute />}>\n            <Route exact path='/login' element={<Loginpage />} />\n          </Route>\n          <Route exact path='/register' element={<ProtectedRoute />}>\n            <Route exact path='/register' element={<Registerpage />} />\n          </Route>\n          <Route exact path='/profile' element={<ProtectedRoute />}>\n            <Route exact path='/profile' element={<Profilepage />} />\n          </Route>\n          <Route exact path='/test' element={<ProtectedRoute />}>\n            <Route exact path='/test' element={<TestPage />} />\n          </Route>\n          <Route exact path='/forgot-password' element={<ProtectedRoute />}>\n            <Route exact path='/forgot-password' element={<ForgotPasswordPage />} />\n          </Route>\n          <Route exact path='/reset-password' element={<ProtectedRoute />}>\n            <Route exact path='/reset-password' element={<ResetPasswordPage />} />\n          </Route>\n          <Route exact path='*' element={<NotfoundPage />} /> */}\n        </Routes>\n      </Router>\n    </>\n  )\n}\n\nfunction ProtectedRoute(props) {\n  const { currentUser } = useAuth()\n  const { path } = props\n  console.log('path', path)\n  const location = useLocation()\n  console.log('location state', location.state)\n\n  if (\n    path === '/login' ||\n    path === '/register' ||\n    path === '/forgot-password' ||\n    path === '/reset-password'\n  ) {\n    return currentUser ? (\n      <Navigate to={location.state?.from ?? '/profile'} />\n    ) : (\n        <Route {...props} />\n      )\n  }\n  return currentUser ? (\n    <Route {...props} />\n  ) : (\n      <Navigate\n        to={{\n          pathname: '/login',\n          state: { from: path },\n        }}\n      />\n    )\n}\n"]},"metadata":{},"sourceType":"module"}