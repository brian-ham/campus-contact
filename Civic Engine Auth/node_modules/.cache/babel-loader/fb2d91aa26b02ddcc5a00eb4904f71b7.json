{"ast":null,"code":"var _jsxFileName = \"/Users/pmallick/Desktop/CS50/civicengine/src/pages/Loginpage.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, chakra, FormControl, FormLabel, Heading, HStack, Input, Stack, useToast } from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport { FaGoogle } from 'react-icons/fa';\nimport { Link, useHistory, useLocation } from 'react-router-dom';\nimport { Card } from '../components/Card';\nimport DividerWithText from '../components/DividerWithText';\nimport { Layout } from '../components/Layout';\nimport { useAuth } from '../contexts/AuthContext';\nimport useMounted from '../hooks/useMounted';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Loginpage() {\n  _s();\n\n  const history = useHistory();\n  const {\n    signInWithGoogle,\n    login\n  } = useAuth();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const toast = useToast(); // const mounted = useRef(false)\n\n  const location = useLocation(); // useEffect(() => {\n  //   mounted.current = true\n  //   return () => {\n  //     mounted.current = false\n  //   }\n  // }, [])\n\n  const mounted = useMounted();\n\n  function handleRedirectToOrBack() {\n    var _location$state$from, _location$state;\n\n    // console.log(location?.state)\n    history.replace((_location$state$from = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.from) !== null && _location$state$from !== void 0 ? _location$state$from : '/profile'); // if (location.state) {\n    //   history.replace(location.state?.from)\n    // } else {\n    //   history.replace('/profile')\n    // }\n  }\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      textAlign: \"center\",\n      my: 12,\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      maxW: \"md\",\n      mx: \"auto\",\n      mt: 4,\n      children: [/*#__PURE__*/_jsxDEV(chakra.form, {\n        onSubmit: async e => {\n          e.preventDefault();\n\n          if (!email || !password) {\n            toast({\n              description: 'Credentials not valid.',\n              status: 'error',\n              duration: 9000,\n              isClosable: true\n            });\n            return;\n          } // your login logic here\n\n\n          setIsSubmitting(true);\n          login(email, password).then(res => {\n            handleRedirectToOrBack();\n          }).catch(error => {\n            console.log(error.message);\n            toast({\n              description: error.message,\n              status: 'error',\n              duration: 9000,\n              isClosable: true\n            });\n          }).finally(() => {\n            // setTimeout(() => {\n            //   mounted.current && setIsSubmitting(false)\n            //   console.log(mounted.current)\n            // }, 1000)\n            mounted.current && setIsSubmitting(false);\n          });\n        },\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: \"6\",\n          children: [/*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"email\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Email address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"email\",\n              type: \"email\",\n              autoComplete: \"email\",\n              required: true,\n              value: email,\n              onChange: e => setEmail(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n            id: \"password\",\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"password\",\n              type: \"password\",\n              autoComplete: \"password\",\n              value: password,\n              required: true,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            colorScheme: \"red\",\n            size: \"lg\",\n            fontSize: \"md\",\n            isLoading: isSubmitting,\n            children: \"Sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(HStack, {\n        justifyContent: \"space-between\",\n        my: 4,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"link\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/forgot-password\",\n            children: \"Forgot password?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"link\",\n          onClick: () => history.push('/register'),\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DividerWithText, {\n        my: 6,\n        children: \"OR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline\",\n        isFullWidth: true,\n        colorScheme: \"red\",\n        leftIcon: /*#__PURE__*/_jsxDEV(FaGoogle, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this),\n        onClick: () => signInWithGoogle().then(user => {\n          handleRedirectToOrBack();\n          console.log(user);\n        }).catch(e => console.log(e.message)),\n        children: \"Sign in with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Loginpage, \"Ip5uX4tgQ82XetSfF6e35cQve34=\", false, function () {\n  return [useHistory, useAuth, useToast, useLocation, useMounted];\n});\n\n_c = Loginpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Loginpage\");","map":{"version":3,"sources":["/Users/pmallick/Desktop/CS50/civicengine/src/pages/Loginpage.jsx"],"names":["Button","chakra","FormControl","FormLabel","Heading","HStack","Input","Stack","useToast","React","useState","FaGoogle","Link","useHistory","useLocation","Card","DividerWithText","Layout","useAuth","useMounted","Loginpage","history","signInWithGoogle","login","email","setEmail","password","setPassword","isSubmitting","setIsSubmitting","toast","location","mounted","handleRedirectToOrBack","replace","state","from","e","preventDefault","description","status","duration","isClosable","then","res","catch","error","console","log","message","finally","current","target","value","push","user"],"mappings":"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","sourcesContent":["import {\n  Button,\n  chakra,\n  FormControl,\n  FormLabel,\n  Heading,\n  HStack,\n  Input,\n  Stack,\n  useToast,\n} from '@chakra-ui/react'\nimport React, { useState } from 'react'\nimport { FaGoogle } from 'react-icons/fa'\nimport { Link, useHistory, useLocation } from 'react-router-dom'\nimport { Card } from '../components/Card'\nimport DividerWithText from '../components/DividerWithText'\nimport { Layout } from '../components/Layout'\nimport { useAuth } from '../contexts/AuthContext'\nimport useMounted from '../hooks/useMounted'\n\nexport default function Loginpage() {\n  const history = useHistory()\n  const { signInWithGoogle, login } = useAuth()\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const toast = useToast()\n  // const mounted = useRef(false)\n  const location = useLocation()\n\n  // useEffect(() => {\n  //   mounted.current = true\n  //   return () => {\n  //     mounted.current = false\n  //   }\n  // }, [])\n\n  const mounted = useMounted()\n\n  function handleRedirectToOrBack() {\n    // console.log(location?.state)\n    history.replace(location.state?.from ?? '/profile')\n    // if (location.state) {\n    //   history.replace(location.state?.from)\n    // } else {\n    //   history.replace('/profile')\n    // }\n  }\n\n  return (\n    <Layout>\n      <Heading textAlign='center' my={12}>\n        Login\n      </Heading>\n      <Card maxW='md' mx='auto' mt={4}>\n        <chakra.form\n          onSubmit={async e => {\n            e.preventDefault()\n            if (!email || !password) {\n              toast({\n                description: 'Credentials not valid.',\n                status: 'error',\n                duration: 9000,\n                isClosable: true,\n              })\n              return\n            }\n            // your login logic here\n            setIsSubmitting(true)\n            login(email, password)\n              .then(res => {\n                handleRedirectToOrBack()\n              })\n              .catch(error => {\n                console.log(error.message)\n                toast({\n                  description: error.message,\n                  status: 'error',\n                  duration: 9000,\n                  isClosable: true,\n                })\n              })\n              .finally(() => {\n                // setTimeout(() => {\n                //   mounted.current && setIsSubmitting(false)\n                //   console.log(mounted.current)\n                // }, 1000)\n                mounted.current && setIsSubmitting(false)\n              })\n          }}\n        >\n          <Stack spacing='6'>\n            <FormControl id='email'>\n              <FormLabel>Email address</FormLabel>\n              <Input\n                name='email'\n                type='email'\n                autoComplete='email'\n                required\n                value={email}\n                onChange={e => setEmail(e.target.value)}\n              />\n            </FormControl>\n            <FormControl id='password'>\n              <FormLabel>Password</FormLabel>\n              <Input\n                name='password'\n                type='password'\n                autoComplete='password'\n                value={password}\n                required\n                onChange={e => setPassword(e.target.value)}\n              />\n            </FormControl>\n            {/* <PasswordField /> */}\n            <Button\n              type='submit'\n              colorScheme='red'\n              size='lg'\n              fontSize='md'\n              isLoading={isSubmitting}\n            >\n              Sign in\n            </Button>\n          </Stack>\n        </chakra.form>\n        <HStack justifyContent='space-between' my={4}>\n          <Button variant='link'>\n            <Link to='/forgot-password'>Forgot password?</Link>\n          </Button>\n          <Button variant='link' onClick={() => history.push('/register')}>\n            Register\n          </Button>\n        </HStack>\n        <DividerWithText my={6}>OR</DividerWithText>\n        <Button\n          variant='outline'\n          isFullWidth\n          colorScheme='red'\n          leftIcon={<FaGoogle />}\n          onClick={() =>\n            signInWithGoogle()\n              .then(user => {\n                handleRedirectToOrBack()\n                console.log(user)\n              })\n              .catch(e => console.log(e.message))\n          }\n        >\n          Sign in with Google\n        </Button>\n      </Card>\n    </Layout>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}